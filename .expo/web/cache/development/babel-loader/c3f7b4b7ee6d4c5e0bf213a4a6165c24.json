{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gabriel/Documentos/nextLevelWeekTogether/game-play/src/hooks/auth.tsx\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport * as AuthSession from 'expo-auth-session';\nexport var AuthContext = createContext({});\n\nfunction AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  function SignIn() {\n    try {\n      setLoading(true);\n      var authUrl = \"\";\n      AuthSession.startAsync({\n        authUrl: authUrl\n      });\n    } catch (error) {}\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, children);\n}\n\nfunction useAuth() {\n  var context = useContext(AuthContext);\n  return context;\n}\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["/home/gabriel/Documentos/nextLevelWeekTogether/game-play/src/hooks/auth.tsx"],"names":["React","createContext","useContext","useState","AuthSession","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","SignIn","authUrl","startAsync","error","useAuth","context"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAAyCC,UAAzC,EAAqDC,QAArD,QAAoE,OAApE;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AA0BA,OAAO,IAAMC,WAAW,GAAGJ,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASK,YAAT,OAAqD;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;;AACjD,kBAAwBJ,QAAQ,CAAO,EAAP,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA8BN,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOO,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,WAASC,MAAT,GAAkB;AACd,QAAI;AACAD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,OAAO,KAAb;AAEAT,MAAAA,WAAW,CACNU,UADL,CACgB;AAACD,QAAAA,OAAO,EAAPA;AAAD,OADhB;AAGH,KAPD,CAOE,OAAOE,KAAP,EAAc,CACf;AACJ;;AAED,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBP,MAAAA,IAAI,EAAJA;AADyB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKD,QAHL,CADJ;AAOH;;AAED,SAASS,OAAT,GAAmB;AACf,MAAMC,OAAO,GAAGf,UAAU,CAACG,WAAD,CAA1B;AAEA,SAAOY,OAAP;AACH;;AAED,SAAQX,YAAR,EAAsBU,OAAtB","sourcesContent":["import React, {createContext, ReactNode, useContext, useState} from \"react\";\nimport * as AuthSession from 'expo-auth-session';\nimport {\n    REDIRECT_URL,\n    SCOPE,\n    RESPONSE_TYPE,\n    CLIENT_ID,\n    CDN_IMAGE\n} from '../configs';\n\ntype User = {\n    id: string,\n    username: string,\n    firstName: string,\n    avatar: string,\n    email: string,\n    token: string\n}\n\ntype AuthContexData = {\n    user: User\n}\n\ntype AuthProviderProps = {\n    children: ReactNode,\n}\n\nexport const AuthContext = createContext({} as AuthContexData);\n\nfunction AuthProvider({children}: AuthProviderProps) {\n    const [user, setUser] = useState<User>({} as User);\n    const [loading, setLoading] = useState(false);\n\n    function SignIn() {\n        try {\n            setLoading(true);\n            const authUrl =  ``;\n\n            AuthSession\n                .startAsync({authUrl})\n\n        } catch (error) {\n        }\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            user\n        }}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nfunction useAuth() {\n    const context = useContext(AuthContext);\n\n    return context;\n}\n\nexport {AuthProvider, useAuth}\n"]},"metadata":{},"sourceType":"module"}